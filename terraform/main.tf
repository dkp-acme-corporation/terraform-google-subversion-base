#######################################################################################################################
## ----------------------------------------------------------------------------------------------------------------- ##
## Terraform Root Module
## ------------------------------
## - 
## ----------------------------------------------------------------------------------------------------------------- ##
#######################################################################################################################
#BOF
terraform {
  # Terraform version required for this module to function
  required_version = "~> 1.2"
  # ---------------------------------------------------
  # Setup providers
  # ---------------------------------------------------
  required_providers {
    #
    google = {
      source  = "registry.terraform.io/hashicorp/google"
      version = "~> 4.40"
    }
  } #END => required_providers
  # ---------------------------------------------------
  # Setup Backend
  # ---------------------------------------------------
  # 
  # ---------------------------------------------------
} #END => terraform
## ---------------------------------------------------
## provider setup and authorization
## ---------------------------------------------------
provider "google" {
  # assign the project to execute within
  project = var.gcpProject
  # setup location
  region = var.gcpRegion
  zone   = var.gcpZone
} # END => provider
#######################################################################################################################
## ----------------------------------------------------------------------------------------------------------------- ##
## Local variable setup
## ----------------------------------------------------------------------------------------------------------------- ##
#######################################################################################################################
locals {
  ## ---------------------------------------------------

  # output data setup
  computeDiskInstances = resource.google_compute_disk.default
}
#######################################################################################################################
## ----------------------------------------------------------------------------------------------------------------- ##
## Data
## ----------------------------------------------------------------------------------------------------------------- ##
#######################################################################################################################
#
## ---------------------------------------------------
## ---------------------------------------------------
#
#######################################################################################################################
## ----------------------------------------------------------------------------------------------------------------- ##
## Resources
## ----------------------------------------------------------------------------------------------------------------- ##
#######################################################################################################################
#
## ---------------------------------------------------
## ---------------------------------------------------
resource "google_compute_disk" "default" {
  count = var.computeInstanceCount
  #
  name = format("%s-%s-%02s", var.computeInstanceKey, var.computeEnvironment, count.index)
  type = "pd-ssd"
  size = 20
  labels = {
    environment = var.computeEnvironment
  }
}
#
#######################################################################################################################
## ----------------------------------------------------------------------------------------------------------------- ##
#######################################################################################################################
#EOF