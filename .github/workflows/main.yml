#
#
# BOF
---

name: Deployment workflow 
run-name: Creation deployment workflow run by ${{ github.actor }}
on:
  push:
   branches:
      - 'main'
  workflow_dispatch:

# Relative paths will be under the $GITHUB_WORKSPACE directory
env:
  TERRAFORM_CODE_PATH: ./terraform
  #
  TF_IN_AUTOMATION: true
  TF_TOKEN_app_terraform_io: ${{ secrets.TF_CLOUD_TOKEN }}
  TF_CLOUD_ORGANIZATION: ${{ secrets.TF_CLOUD_ORGANIZATION }}
  #
  GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
  #
  TF_VAR_gcpProject: ${{ secrets.TF_VAR_GCPPROJECT }}
  TF_VAR_gcpRegion: ${{ secrets.TF_VAR_GCPREGION }}
  TF_VAR_gcpZone: ${{ secrets.TF_VAR_GCPZONE }}
  TF_VAR_computeSshKeys: ${{ secrets.TF_VAR_COMPUTESSHKEYS }}

defaults:
  run: 
    shell: bash

jobs:
  preparation:
    runs-on: ubuntu-latest
    env: 
      TERRAFORM_VERSION: 1.3.3
    # 
    steps:
      ## ---------------------------------------------------
      - name: Initialization
        run: |
          echo "TF_WORKSPACE=$(basename ${{ github.repository }})" >> $GITHUB_ENV
      ## ---------------------------------------------------
      - name: Checkout code
        uses: actions/checkout@v3
      ## ---------------------------------------------------
      - name: Cache setup
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            /usr/local/bin/terraform
            ${{ env.TERRAFORM_CODE_PATH }}/.terraform
          key: ${{ runner.os }}-terraform-${{ github.ref_name }}
      ## ---------------------------------------------------
      - name: Terraform installation
        id: terraform-install
        #
        run: |
          wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update
          sudo apt install terraform=${{ env.TERRAFORM_VERSION }}
      ## ---------------------------------------------------
      - name: Terraform install validataion
        id: terraform-install-validate
        run: |
          pwd
          find .
          set
          terraform version
      ## ---------------------------------------------------
      - name: Terraform initialization
        id: terraform-init
        run: |
          cd ${{ env.TERRAFORM_CODE_PATH }}
          terraform init
  deployment:
    runs-on: ubuntu-latest
    if: ${{ success() }}
    needs: [ preparation ]
    environment: Prd
    #
    steps:
      ## ---------------------------------------------------
      - name: Initialization
        run: |
          echo "TF_WORKSPACE=$(basename ${{ github.repository }})" >> $GITHUB_ENV
      ## ---------------------------------------------------
      - name: Checkout code
        uses: actions/checkout@v3
      ## ---------------------------------------------------
      - name: Cache setup
        id: cache
        uses: actions/cache@v3
        with:
          path: |
              /usr/local/bin/terraform
              ${{ env.TERRAFORM_CODE_PATH }}/.terraform
          key: ${{ runner.os }}-terraform-${{ github.ref_name }}
      ## ---------------------------------------------------
      - name: Terraform Apply
        run: |
          cd ${{ env.TERRAFORM_CODE_PATH }}
          terraform init
          terraform apply --auto-approve

#curl \
#    -X DELETE \
#    -H "Accept: application/vnd.github.v3+json" \
#    -H "Authorization: token <TOKEN>" \
#    https://api.github.com/repos/OWNER/REPO/actions/caches/CACHE_ID   

...
# EOF